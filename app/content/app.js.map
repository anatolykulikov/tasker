{"version":3,"sources":["functions.js","index.js","init.js","ui.js"],"names":["createTaskСheck","id","taskName","document","getElementById","value","taskDesc","length","addTask","removeEventListener","remove","name","desc","task","app","task_coint","decr","data","getData","plan","push","drawTasks","updateApp","deleteTask","arr","element","from","splice","moveTask","to","run","Date","humanizeData","d","day","getDate","month","getMonth","year","getFullYear","hour","getHours","minute","getMinutes","sizeUsed","appSize","JSON","stringify","toFixed","sizeUsedPercent","percent","initApp","localStorage","getItem","loadApp","notify","installApp","drawMain","drawMenu","version","work","done","archive","setItem","parse","deleteApp","removeItem","drawTaskboard","innerHTML","page","drawArchive","drawSettings","addEventListener","createTask","field","render","i","id_delete","concat","id_run","_loop","id_done","id_plan","_loop2","id_archive","_loop3","addTaskId","Math","trunc","random","dialog","createElement","className","body","appendChild","closeTask","drawArchiveTask","dataCreateTask","usedPlace","usedBar","html","deleteAppProcess","closeDeleteApp","KillApp","head","message","type","setTimeout","classList","add","window","onload"],"mappings":"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","file":"app.js","sourcesContent":["// Проверка заполнения задания\nfunction createTaskСheck(id) {\n    let taskName = document.getElementById('dialog-' + id + '-name').value;\n    let taskDesc = document.getElementById('dialog-' + id + '-decr').value;\n\n    if(taskName.length > 0 && taskDesc .length > 0) {\n        addTask(taskName, taskDesc);\n        document.getElementById(id).removeEventListener('click', function() {\n            createTaskСheck(id);\n        });\n        document.getElementById('dialog-' + id).remove();\n    }\n}\n\n// Добавление задачи\nfunction addTask(name, desc) {\n    let task = {\n        id: ++app.task_coint,\n        name: name,\n        decr: desc,\n        data: getData()\n    }\n    app.plan.push(task);\n    drawTasks('plan');\n    updateApp();\n}\n\n// Удаление задачи\nfunction deleteTask(arr, element, from) {\n    arr.splice(element, 1);\n    drawTasks(from);\n    updateApp();\n}\n\n// Перемещение задачи\nfunction moveTask(arr, from, to, element) {\n    let run = arr[element];\n    app[to].push(run);\n    arr.splice(element, 1);\n    drawTasks(from);\n    drawTasks(to);\n    updateApp();\n}\n\n// Функция текущей даты\nfunction getData() {\n    let data = new Date();\n    return data;\n};\n// Приведение даты к человеческому состоянию\nfunction humanizeData(d) {\n    let data = new Date(d);\n    let day = data.getDate(),\n        month = data.getMonth(),\n        year = data.getFullYear(),\n        hour = data.getHours(),\n        minute = data.getMinutes();\n    let monthNames = ['января', 'февраля', 'марта', 'апреля', 'мая', 'июня', 'июля', 'августа', 'сентября', 'октября', 'ноября', 'декабря'];\n    let humanMonth = monthNames[month];\n    let response = day + ' ' + humanMonth + ' ' + year + ' в ' + hour + ':' + minute;\n    return response;\n}\n\n\n// Свободное место\nfunction sizeUsed() {\n    let appToString = JSON.stringify(app);\n    let appSize = ((appToString.length * 2) / 1024).toFixed(2);\n    let percent = ((appSize / 5120) * 100).toFixed(2);\n    let response = appSize + 'Кб из 5Мб (' + percent +'% используется)';\n    return response;\n}\nfunction sizeUsedPercent() {\n    let appToString = JSON.stringify(app);\n    let appSize = ((appToString.length * 2) / 1024).toFixed(2);\n    let percent = ((appSize / 5120) * 100).toFixed(2);\n    if(percent < 1) {\n        percent = 1;\n    }\n    return percent;\n}","var app;\n// Инициализация приложения\nwindow.onload = () => {\n    initApp();\n};","function initApp() {\n    // Приложение установлено\n    if(localStorage.getItem('TaskerApp')) {\n        app = loadApp();\n        notify('Готово', 'Все данные загружены', 'success');\n    } else {\n        app = installApp();\n        notify('Установлено', 'Приложение успешно установлено и готово к работе', 'success');\n    }\n    drawMain();\n    drawMenu('tasks');\n}\n\nfunction installApp() {\n    let app = {\n        version: 1,\n        task_coint: 0,\n        plan: [],\n        work: [],\n        done: [],\n        archive: []\n    };\n    localStorage.setItem('TaskerApp', JSON.stringify(app));\n    notify('Готово!','Приложение успешно установлено и готово к работе', 'success');\n    return app;\n}\nfunction loadApp() {\n    app = JSON.parse(localStorage.getItem('TaskerApp'));\n    return app;\n}\nfunction updateApp() {\n    localStorage.setItem('TaskerApp', JSON.stringify(app));\n}\nfunction deleteApp() {\n    localStorage.removeItem('TaskerApp');\n    notify('Приложение удалено','Приложение полностью удалено, все данные уничтожены', 'error');\n    drawMain();\n    drawTaskboard();\n}","// Отрисовка приложения\nfunction drawMain() {\n    let html = '<aside class=\"app__sidebar\"><h1>Tasker<span>.app</span></h1><nav class=\"app__menu\" id=\"appmenu\"></nav></aside><div id=\"appbody\" class=\"app__body\"></div>';\n    document.getElementById('main').innerHTML = html;\n    \n}\n\n//Отрисовка меню\nfunction drawMenu(page) {\n    switch(page) {\n        case 'tasks': {\n            let html = `<span class=\"app__menu_addtask\" id=\"addtask\">Добавить</span><span class=\"app__menu_element app__menu-selected\">Задачи</span><span class=\"app__menu_element\" onclick=\"drawMenu('archive')\">Архив</span><hr class=\"app__menu_divider\"><span class=\"app__menu_element\" onclick=\"drawMenu('settings')\">Настройки</span>`;\n            document.getElementById('appmenu').innerHTML = html;\n            drawTaskboard();\n        break;}\n        case 'archive': {\n            let html = `<span class=\"app__menu_addtask\" id=\"addtask\">Добавить</span><span class=\"app__menu_element\" onclick=\"drawMenu('tasks')\">Задачи</span><span class=\"app__menu_element app__menu-selected\">Архив</span><hr class=\"app__menu_divider\"><span class=\"app__menu_element\" onclick=\"drawMenu('settings')\">Настройки</span>`;\n            document.getElementById('appmenu').innerHTML = html;\n            drawArchive();\n        break;}\n        case 'settings': {\n            let html = `<span class=\"app__menu_addtask\" id=\"addtask\">Добавить</span><span class=\"app__menu_element\" onclick=\"drawMenu('tasks')\">Задачи</span><span class=\"app__menu_element\" onclick=\"drawMenu('archive')\">Архив</span><hr class=\"app__menu_divider\"><span class=\"app__menu_element app__menu-selected\">Настройки</span>`;\n            document.getElementById('appmenu').innerHTML = html;\n            drawSettings();\n        break;}\n    }\n    document.getElementById('addtask').addEventListener('click', createTask);\n}\n\n// Отрисовка доски задач\nfunction drawTaskboard() {\n    let html = '<section class=\"app__task_col\"><h2>План</h2><div class=\"app__wrapper\" id=\"plan\"></div></section><section class=\"app__task_col\"><h2>В работе</h2><div class=\"app__wrapper\" id=\"work\"></div></section><section class=\"app__task_col\"><h2>Выполнены</h2><div class=\"app__wrapper\" id=\"done\"></div></section>';\n    document.getElementById('appbody').innerHTML = html;\n    drawTasks('plan');\n    drawTasks('work');\n    drawTasks('done');\n}\n// Отрисовка задачи\nfunction drawTasks(field) {\n    let data = app[field];\n    let render = '';\n\n    switch(field) {\n        // Отрисовываем элементы в плане\n        case 'plan': {\n            for (let i = 0; i < data.length; i++) {\n                let id_delete = `deltask-${data[i].id}`;\n                let id_run = `runtask-${data[i].id}`;\n                let html = `<div class=\"task\"><h3>${data[i].name}</h3><p>${data[i].decr}</p><div class=\"task__controls\"><span class=\"control-active\" id=\"${id_run}\">В работу</span><span class=\"control-delete\" id=\"${id_delete}\">Удалить</span></div></div>`;\n                render = render + html;\n            }\n            document.getElementById(field).innerHTML = render;\n            for (let i = 0; i < data.length; i++) {\n                let id_delete = `deltask-${data[i].id}`;\n                let id_run = `runtask-${data[i].id}`;\n                document.getElementById(id_delete).addEventListener('click', function() {\n                    deleteTask(data, [i], field);\n                });\n                document.getElementById(id_run).addEventListener('click', function() {\n                    moveTask(data, 'plan', 'work', [i]);\n                });\n            }\n        break;\n        }\n        case 'work': {\n            for (let i = 0; i < data.length; i++) {\n                let id_delete = `deltask-${data[i].id}`;\n                let id_done = `donetask-${data[i].id}`;\n                let id_plan = `toplantask-${data[i].id}`;\n                let html = `<div class=\"task\"><h3>${data[i].name}</h3><p>${data[i].decr}</p><div class=\"task__controls\"><span class=\"control-active\" id=\"${id_done}\">Выполнено</span><span class=\"control-back\"  id=\"${id_plan}\">В план</span><span class=\"control-delete\" id=\"${id_delete}\">Удалить</span></div></div>`;\n                render = render + html;\n            }\n            document.getElementById(field).innerHTML = render;\n            for (let i = 0; i < data.length; i++) {\n                let id_delete = `deltask-${data[i].id}`;\n                let id_done = `donetask-${data[i].id}`;\n                let id_plan = `toplantask-${data[i].id}`;\n                document.getElementById(id_delete).addEventListener('click', function() {\n                    deleteTask(data, [i], field);\n                });\n                document.getElementById(id_done).addEventListener('click', function() {\n                    moveTask(data, 'work', 'done', [i]);\n                });\n                document.getElementById(id_plan).addEventListener('click', function() {\n                    moveTask(data, 'work', 'plan', [i]);\n                });\n            }\n        break;\n        }\n        case 'done': {\n            for (let i = 0; i < data.length; i++) {\n                let id_delete = `deltask-${data[i].id}`;\n                let id_run = `runtask-${data[i].id}`;\n                let id_archive = `archtask-${data[i].id}`;\n                let html = `<div class=\"task\"><h3>${data[i].name}</h3><p>${data[i].decr}</p><div class=\"task__controls\"><span class=\"control-archive\" id=\"${id_archive}\">В архив</span><span class=\"control-back\" id=\"${id_run}\">В работу</span><span class=\"control-delete\" id=\"${id_delete}\">Удалить</span></div></div>`;\n                render = render + html;\n            }\n            document.getElementById(field).innerHTML = render;\n            document.getElementById(field).innerHTML = render;\n            for (let i = 0; i < data.length; i++) {\n                let id_delete = `deltask-${data[i].id}`;\n                let id_run = `runtask-${data[i].id}`;\n                let id_archive = `archtask-${data[i].id}`;\n                document.getElementById(id_delete).addEventListener('click', function() {\n                    deleteTask(data, [i], field);\n                });\n                document.getElementById(id_run).addEventListener('click', function() {\n                    moveTask(data, 'done', 'work', [i]);\n                });\n                document.getElementById(id_archive).addEventListener('click', function() {\n                    moveTask(data, 'done', 'archive', [i]);\n                });\n            }\n        break;\n        }\n    }\n}\n// Окно добавления задания\nfunction createTask() {\n    let addTaskId = Math.trunc(Math.random() * 10);\n    let dialog = document.createElement('div');\n        dialog.className = 'dialog';\n        dialog.id = 'dialog-' + addTaskId;\n        dialog.innerHTML = '<header>Новая задача</header><div class=\"dialog__body\"><input type=\"text\" id=\"dialog-' + addTaskId + '-name\" placeholder=\"Название задачи\"><textarea id=\"dialog-' + addTaskId + '-decr\" placeholder=\"Краткое описание задачи\"></textarea><button class=\"add\" id=' + addTaskId + '>Добавить</button><button class=\"delete\" id=\"close-' + addTaskId + '\">Закрыть</button></div>';\n\n    document.body.appendChild(dialog);\n    document.getElementById(addTaskId).addEventListener('click', function() {\n        createTaskСheck(addTaskId);\n    });\n    document.getElementById('close-'+addTaskId).addEventListener('click', function() {\n        closeTask(addTaskId);\n    });\n}\n// Закрытие окна добавления задания\nfunction closeTask(id) {\n    document.getElementById(id).removeEventListener('click', function() {\n        createTaskСheck(id);\n    });\n    document.getElementById('close-'+id).removeEventListener('click', function() {\n        closeTask(id);\n    });\n    document.getElementById('dialog-' + id).remove();\n}\n\n// Отрисовка архива\nfunction drawArchive() {\n    let html = '<section class=\"app__archive\"><h2>Архив задач</h2><div class=\"app__wrapper\" id=\"archive\"></div></section><section class=\"app__archive_decr\"><p>Здесь хранятся все выполненные вами задачи</p>';\n    document.getElementById('appbody').innerHTML = html;\n    drawArchiveTask();\n}\n// Отрисовка задачи из архива\nfunction drawArchiveTask() {\n    let data = app.archive;\n    let render = '';\n    if(data.length !== 0) {\n        for(let i = 0; i < data.length; i++) {\n            let dataCreateTask = humanizeData(data[i].data);\n            let html = `<div class=\"task-archived\"><h3>${data[i].name}</h3><p>${data[i].decr}</p><time>Задача создана: ${dataCreateTask}</time></div>`;\n            render = render + html;\n        }\n    } else {\n        render = '<div class=\"empty__archive\">В архиве ничего нет</div>'\n    }\n    document.getElementById('archive').innerHTML = render;\n}\n\n// Отрисовка настроек\nfunction drawSettings() {\n    let usedPlace = `<div class=\"setting__param\"><span>Используемое место:</span>${sizeUsed()}</div>`;\n    let usedBar = `<div class=\"setting__placebar\"><span style=\"width:${sizeUsedPercent()}%;\"></span></div>`;\n    let delele = `<div class=\"setting__delete\"><button onclick=\"deleteAppProcess()\">Удалить приложение</button></div>`;\n    let html = `<section class=\"app__settings\"><h2>Настройки</h2><div class=\"app__wrapper\">${usedPlace + usedBar + delele}</div></section><section class=\"app__settings_decr\"><p>Настройки приложения и основная информация</p><p>Разработчик: <a href=\"https://anatolykulikov.ru\" target=\"_blank\">Анатолий Куликов</a></p><p>Репозиторий на <a href=\"https://github.com/anatolykulikov/tasker\" target=\"_blank\">Github</a></p></section>`;\n    document.getElementById('appbody').innerHTML = html;\n}\n\n// Полное удаление приложения\nfunction deleteAppProcess() {\n    let dialog = document.createElement('div');\n        dialog.className = 'dialog dialog-delete';\n        dialog.id = 'deleteApp';\n        dialog.innerHTML = '<header>Удаление приложения</header><div class=\"dialog__body\"><p>Вы собираетесь удалить данные приложения Tasker.</p><p>Все данные будут удалены, восстановить их будет невозможно!</p><button class=\"add\" id=\"close-deleteApp\">Отменить удаление</button><button class=\"delete\" id=\"KillApp\">Удалить</button></div>';\n\n    document.body.appendChild(dialog);\n    document.getElementById('close-deleteApp').addEventListener('click', closeDeleteApp);\n    document.getElementById('KillApp').addEventListener('click', KillApp);\n}\nfunction closeDeleteApp() {\n    document.getElementById('close-deleteApp').removeEventListener('click', closeDeleteApp);\n    document.getElementById('KillApp').removeEventListener('click', KillApp);\n    document.getElementById('deleteApp').remove();\n}\nfunction KillApp() {\n    document.getElementById('close-deleteApp').removeEventListener('click', closeDeleteApp);\n    document.getElementById('KillApp').removeEventListener('click', KillApp);\n    document.getElementById('deleteApp').remove();\n    deleteApp();\n}\n\n// Вызов оповещения\nfunction notify(head, message, type) {\n    let notify = document.createElement('div');\n    notify.id = Math.trunc(Math.random() * 10);\n    notify.className = `notify notify-${type} notify-arrive`;\n    notify.innerHTML = `<h4>${head}</h4><p>${message}</p>`;\n    document.body.appendChild(notify);\n    setTimeout(function () {\n        notify.classList.remove('notify-arrive');\n        setTimeout(function () {\n            notify.classList.add('notify-leave')\n            setTimeout(function () {\n                notify.remove();\n            }, 1200);\n        }, 4000)\n    }, 1000);\n}"]}