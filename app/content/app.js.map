{"version":3,"sources":["localstorage.js","app_object.js","console.js","index.js"],"names":["app","App","plan","work","ready","archive","counter","version","username","active","_classCallCheck","this","localStorage","setItem","JSON","stringify","console","log","ask","prompt","task","id","name","content","date","getData","push","updateStorage","Date","day","getDay","monthName","getMonth","year","getFullYear","getHours","getMinutes","renderPlan","god","group","groupEnd","loadStorage","length","install","clearStorage","clear","undefined","window","onload"],"mappings":"uZAAAA,ICAAC,eACA,SAAAA,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAAC,gBAAAC,KAAAV,GACAU,KAAAT,KAAA,GACAS,KAAAR,KAAA,GACAQ,KAAAP,MAAA,GACAO,KAAAN,QAAA,GACAM,KAAAL,QAAA,EACAK,KAAAJ,QAAA,EACAI,KAAAH,SAAA,GACAG,KAAAF,QAAA,yDAIAT,IAAAS,QAAA,EACAG,aAAAC,QAAA,YAAAC,KAAAC,UAAAf,MACAgB,QAAAC,IAAA,iEAKA,IAAAC,EAAAC,OAAA,QAAA,gBACAC,EAAA,CACAC,KAAArB,IAAAM,QACAgB,KAAAJ,EACAK,QAAA,GACAC,KAAAC,WAEAd,KAAAT,KAAAwB,KAAAN,GACAO,yBAIA,SAAAF,UAEA,IAAAD,EAAA,IAAAI,KAEAC,EAAAL,EAAAM,SACAD,EAAA,KAAAA,EAAA,IAAAA,GAEA,IAEAE,EADA,CAAA,SAAA,UAAA,QAAA,SAAA,MAAA,OAAA,OAAA,UAAA,WAAA,UAAA,SAAA,WADAP,EAAAQ,YAIAC,EAAAT,EAAAU,cAGA,OADAV,EAAAW,WAAA,IAAAX,EAAAY,aAAA,MAAAP,EAAA,IAAAE,EAAA,IAAAE,EAKA,SAAAI,aACArC,IAAAqC,aCnDA,SAAAC,MACAtB,QAAAuB,MAAA,WACAvB,QAAAC,IAAA,kDACAD,QAAAC,IAAA,sDACAD,QAAAC,IAAA,kDACAD,QAAAwB,WFFA,SAAAC,cACA,GAAA7B,aAAA8B,QACA1B,QAAAC,IAAA,8BACAjB,IAAA,IAAAC,KACA0C,YAEA3B,QAAAC,IAAA,sBACAjB,IAAA,IAAAC,KAIA,SAAA0B,gBACAf,aAAAC,QAAA,SAAAC,KAAAC,UAAAf,MACAgB,QAAAC,IAAA,iCAIA,SAAA2B,eACAhC,aAAAiC,QACA7C,SAAA8C,EACA9B,QAAAC,IAAA,yCGtBA8B,OAAAC,OAAA,WACAP","file":"app.js","sourcesContent":["var app;\n\n// Проверка локального хранилища\nfunction loadStorage() {\n    if(localStorage.length == 0) {\n        console.log('Локальное хранилище пусто');\n        app = new App;\n        app.install();\n    } else {\n        console.log('Приложение активно');\n        app = new App;\n    }\n}\n\nfunction updateStorage() {\n    localStorage.setItem('Tasker', JSON.stringify(app));\n    console.log('Локальное хранилище обновлено');\n};\n\n// Очистка локального хранилища\nfunction clearStorage() {\n    localStorage.clear();\n    app = undefined;\n    console.log('Локальное хранилище полностью удалено');\n};","class App {\n    constructor(plan, work, ready, archive, counter, version, username, active) {\n        this.plan = [];\n        this.work = [];\n        this.ready = [];\n        this.archive = [];\n        this.counter = 0;\n        this.version = 1;\n        this.username = '';\n        this.active = false;\n    }\n    // Инициализация приложения\n    install() {\n        app.active = true;\n        localStorage.setItem('TaskerApp', JSON.stringify(app));\n        console.log('Локальное хранилище создано');\n    }\n\n    // Добавление задания\n    addTask() {\n        let ask = prompt('Enter', 'Пробный таск');\n        let task = {\n            id: ++app.counter,\n            name: ask,\n            content: '',\n            date: getData()\n        };\n        this.plan.push(task);\n        updateStorage();\n    }\n}\n\nfunction getData() {\n    // Получаем текущую дату\n    let date = new Date();\n    // День\n    let day = date.getDay();\n    if (day < 10) day = '0' + day;\n    // Месяц\n    let month = date.getMonth();\n    let mountNames = ['января', 'февраля', 'марта', 'апреля', 'мая', 'июня', 'июля', 'августа', 'сентября', 'октября', 'ноября', 'декабря']\n    let monthName = mountNames[month];\n    // Год\n    let year = date.getFullYear();\n    // собираем и возвращаем\n    let response = date.getHours() + ':' + date.getMinutes()  + ' | ' + day + ' ' + monthName  + ' ' + year;\n    return response;\n}\n\n\nfunction renderPlan() {\n    app.renderPlan();\n}","function god() {\n    console.group('Функции');\n    console.log('loadStorage() // Проверка локального хранилища');\n    console.log('updateStorage() // Обновление локального хранилища');\n    console.log('clearStorage() // Очистка локального хранилища');\n    console.groupEnd();\n}","// Инициализация приложения\nwindow.onload = function() {\n    loadStorage();\n};"]}